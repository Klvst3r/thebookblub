3.1 Comandos en Yii

Creaci√≥n y ejecuci√≥n de controladores en Terminal


¬øC√≥mo usar comandos en Yii?

Al construir aplicaciones web complejas, es vital estar familiarizado con la configuraci√≥n y operaci√≥n de diferentes herramientas que un framework como Yii ofrece. Tanto los comandos de l√≠nea de comando como los controladores son esenciales para manipular y gestionar recursos del sistema de manera eficiente. Aqu√≠, exploraremos en detalle c√≥mo utilizar comandos dentro del framework Yii, brind√°ndote la capacidad de automatizar tareas desde la terminal.
¬øQu√© es un command en Yii?

En Yii, un command es esencialmente un controlador dise√±ado para ser ejecutado desde la l√≠nea de comandos en lugar del ambiente web. Esto es √∫til para realizar operaciones que no necesitan una interfaz de usuario, como tareas de mantenimiento o automatizaci√≥n. Por defecto, la estructura es similar a la de un controlador web est√°ndar, pero orientada a ejecutar funciones desde la terminal.
¬øC√≥mo ejecutar comandos b√°sicos?

Al instalar Yii, se proporciona un hello-controller que sirve como ejemplo b√°sico de un command. Este controlador imprime un mensaje simple cuando se invoca desde la terminal. Aqu√≠ un ejemplo de c√≥mo ejecutarlo:

php yii hello

Este comando imprimir√° "Hello, world!" si no se proporciona otro mensaje. Puedes pasarle un par√°metro para personalizar la salida.
Creando un nuevo controlador de comandos

El siguiente paso es crear tu propio controlador de comandos. Sigue estas instrucciones para crear un controlador simple que efect√∫e una suma de dos n√∫meros dados:

    Crea el archivo: En la carpeta de commands, crea un archivo llamado platzi-controller.php.

    Define la clase:

namespace app\commands;

use yii\console\Controller;
use yii\console\ExitCode;

class PlatziController extends Controller
{
    public function actionSuma($a, $b = 17)
    {
        $result = $a + $b;
        printf("El resultado es: %.2f\n", $result);
        return ExitCode::OK;
    }
}

Este sencillo controlador suma dos n√∫meros y devuelve el resultado. Adem√°s, si el segundo n√∫mero no se proporciona, usa 17 como valor por defecto.
Ejecutando y probando comandos

Para ver el nuevo controlador en acci√≥n, ejecuta el siguiente comando en tu terminal:

php yii platzi/suma 10 5

Este comando sumar√° 10 y 5, devolviendo "El resultado es: 15.00".

Si omites el segundo n√∫mero, as√≠:

php yii platzi/suma 10

Se usar√° 17 como predeterminado, dando como resultado "El resultado es: 27.00".
Documentaci√≥n b√°sica en PHP

No olvides documentar tus comandos utilizando el sistema de documentaci√≥n de PHP. Esto no solo aclara el prop√≥sito de tu c√≥digo, sino que tambi√©n es una buena pr√°ctica para proyectos a largo plazo. Puedes agregar comentarios como los siguientes a tus m√©todos:

/**
 * Suma los valores de los dos par√°metros.
 * @param int $a Primer valor a sumar.
 * @param int|null $b Segundo valor a sumar (opcional).
 * @return int El resultado de la suma.
 */

¬øC√≥mo manejar archivos CSV?

Vamos a dar un paso m√°s all√° creando una acci√≥n que lea un archivo CSV y lo imprima l√≠nea por l√≠nea. Uno de los usos potenciales de los comandos es gestionar grandes cantidades de datos de forma eficiente.

    Crea la funci√≥n:

public function actionBooks($file)
{
    $handle = fopen($file, "r");
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        print_r($data);
    }
    fclose($handle);
    return ExitCode::OK;
}

    Ejecuta el comando:

php yii platzi/books path/to/yourfile.csv

Esta acci√≥n abrir√° el archivo CSV especificado, ley√©ndolo l√≠nea por l√≠nea e imprimiendo cada entrada como un array.


Recursos:


platzicontroller.php
---

<?php

namespace app\commands;

use yii\console\Controller;
use yii\console\ExitCode;

/**
 * Comando para clase, de prueba
 */
class PlatziController extends Controller {

  /**
   * Suma los valores de los dos par√É¬°metros
   */
  public function actionSuma($a, $b = 17) {
    $result = $a + $b;
    printf("%0.2f\n", $result);
    return ExitCode::OK;
  }

  public function actionBooks ($file) {
    $f=fopen√Ø¬ºÀÜ$file√Ø¬º≈í "r"√Ø¬º‚Ä∞√Ø¬º‚Ä∫
    while(!feof($f)) {
      $data = fgetcsv($f);
      print_r($data);
    }
    fclose($f);
    return ExitCode:: 0K;
  }¬ù
}¬ù



Para ejecutar el comando

    $ yii klvst3r/books local/books.csv


Comentarios:


Dejo algunos ejemplos de Commands.

exec:

<?php
// Ejecutar un comando y obtener la √∫ltima l√≠nea de la salida
$last_line = exec('ls -la', $output, $return_var);

// Mostrar la √∫ltima l√≠nea
echo "√öltima l√≠nea: " . $last_line . "\n";

// Mostrar todo el output
echo "Output completo: \n";
print_r($output);

// Mostrar el valor de retorno del comando
echo "Valor de retorno: " . $return_var . "\n";
?>

```shell\_exec:

```js
<?php
// Ejecutar un comando y obtener toda la salida
$output = shell_exec('ls -la');

// Mostrar la salida
echo "Output: \n" . $output;
?>

```system:

```js
<?php
// Ejecutar un comando y mostrar la salida en tiempo real
$last_line = system('ls -la', $return_var);

// Mostrar la √∫ltima l√≠nea
echo "√öltima l√≠nea: " . $last_line . "\n";

// Mostrar el valor de retorno del comando
echo "Valor de retorno: " . $return_var . "\n";
?>

```passthru:

```js
<?php
// Ejecutar un comando y mostrar la salida sin procesarla
passthru('ls -la', $return_var);

// Mostrar el valor de retorno del comando
echo "Valor de retorno: " . $return_var . "\n";
?>



Existe un error en el controlador de la linea de comandos:

En mi proyecto de Yii quiero ejecutar algunos comandos pero al ejecutar:
php yii
Exception 'yii\base\UnknownClassException' with message 'Unable to find 'app\commands\Klvst3rController' in file: /home/klvst3r/dev/yii/thebookblub/commands/Klvst3rController.php. Namespace missing?'

in /home/klvst3r/dev/yii/thebookblub/vendor/yiisoft/yii2/BaseYii.php:296


l error que est√°s viendo:

Exception 'yii\base\UnknownClassException' with message 'Unable to find 'app\commands\Klvst3rController' in file: /home/klvst3r/dev/yii/thebookblub/commands/Klvst3rController.php. Namespace missing?'

significa que Yii2 no puede cargar tu clase Klvst3rController ubicada en commands/Klvst3rController.php porque no encuentra el espacio de nombres (namespace) correcto en ese archivo.
‚úÖ C√≥mo solucionarlo

Aseg√∫rate de que tu archivo Klvst3rController.php tenga el siguiente encabezado correcto:

<?php

namespace app\commands;

use yii\console\Controller;

class Klvst3rController extends Controller
{
    public function actionIndex()
    {
        echo "Hola desde Klvst3r!\n";
    }
}

üìå Verifica tambi√©n:

    Ubicaci√≥n del archivo: debe estar en commands/Klvst3rController.php dentro del directorio base de tu aplicaci√≥n (@app).

    Nombre de clase: debe coincidir exactamente con el nombre del archivo (Klvst3rController).

    Nombre del espacio de nombres (namespace): debe ser app\commands, que corresponde a la carpeta commands dentro de tu app base.

    Autoload: aseg√∫rate de no haber modificado las reglas del autoload en composer.json si moviste carpetas o cambiaste estructuras.

Podemos probar si lo detecta con:

   php yii help klvst3r 
   
despu√©s de corregirlo




Para poder utilizar el archivo books.csv lo colocamos dentro de la carpeta /local

Y ahi entonces podemos ejecutar

yii klvst3r/suma

o saludo
  yii klvst3r/index

  yii klvst3r/books local/books.scv

con esto se abrio un archivo y se lee en un array

Con el tema d emodelos se va a poder crear tuplas en la Bd.



